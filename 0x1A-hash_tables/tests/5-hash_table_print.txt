Certainly! Here's an example test case for the `hash_table_print` function:

```c
#include <stdio.h>
#include <stdlib.h>
#include "hash_tables.h"

int main(void)
{
    hash_table_t *hash_table;
    unsigned long int size = 10;

    hash_table = hash_table_create(size);
    if (hash_table == NULL)
    {
        printf("Failed to create hash table.\n");
        return 1;
    }

    /* Add elements to the hash table */
    hash_table_set(hash_table, "key1", "value1");
    hash_table_set(hash_table, "key2", "value2");
    hash_table_set(hash_table, "key3", "value3");

    /* Print the hash table */
    hash_table_print(hash_table);

    return 0;
}
```

In this test case, we create a hash table with a size of 10 using the `hash_table_create` function. We then add elements to the hash table using the `hash_table_set` function. Finally, we call the `hash_table_print` function to print the contents of the hash table. The output will display the key-value pairs in the order they appear in the hash table's array.
